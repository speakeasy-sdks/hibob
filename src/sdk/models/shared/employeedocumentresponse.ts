/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    EmployeeDocumentWithDownloadLink,
    EmployeeDocumentWithDownloadLink$,
} from "./employeedocumentwithdownloadlink";
import { z } from "zod";

export type EmployeeDocumentResponse = {
    documents?: Array<EmployeeDocumentWithDownloadLink> | undefined;
};

/** @internal */
export namespace EmployeeDocumentResponse$ {
    export type Inbound = {
        documents?: Array<EmployeeDocumentWithDownloadLink$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<EmployeeDocumentResponse, z.ZodTypeDef, Inbound> = z
        .object({
            documents: z.array(EmployeeDocumentWithDownloadLink$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.documents === undefined ? null : { documents: v.documents }),
            };
        });

    export type Outbound = {
        documents?: Array<EmployeeDocumentWithDownloadLink$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EmployeeDocumentResponse> = z
        .object({
            documents: z.array(EmployeeDocumentWithDownloadLink$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.documents === undefined ? null : { documents: v.documents }),
            };
        });
}
