/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../../sdk/types";
import { Expose, Transform, Type } from "class-transformer";

export enum EmployeeTerminationUnit {
    Days = "days",
    Weeks = "weeks",
    Month = "month",
    Years = "years",
}

/**
 * Notice period length
 */
export class NoticePeriod extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "length" })
    length?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "unit" })
    unit?: EmployeeTerminationUnit;
}

export class EmployeeTermination extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "lastDayOfWork" })
    @Type(() => String)
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    lastDayOfWork?: RFCDate;

    /**
     * Notice period length
     */
    @SpeakeasyMetadata()
    @Expose({ name: "noticePeriod" })
    @Type(() => NoticePeriod)
    noticePeriod?: NoticePeriod;

    /**
     * The ID of the 'lifecycleReasonType' list entry
     */
    @SpeakeasyMetadata()
    @Expose({ name: "reasonType" })
    reasonType?: string;

    /**
     * The employee's termination date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "terminationDate" })
    @Type(() => String)
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    terminationDate: RFCDate;

    /**
     * The ID of the 'terminationReason' list entry
     */
    @SpeakeasyMetadata()
    @Expose({ name: "terminationReason" })
    terminationReason?: string;
}
