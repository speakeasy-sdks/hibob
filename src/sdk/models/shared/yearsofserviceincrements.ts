/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type YearsOfServiceIncrements = {
    /**
     * Additional days to add.
     */
    extraDays?: number | undefined;
    /**
     * Start after this number of years.
     */
    yearsOfService?: number | undefined;
};

/** @internal */
export namespace YearsOfServiceIncrements$ {
    export type Inbound = {
        extraDays?: number | undefined;
        yearsOfService?: number | undefined;
    };

    export const inboundSchema: z.ZodType<YearsOfServiceIncrements, z.ZodTypeDef, Inbound> = z
        .object({
            extraDays: z.number().optional(),
            yearsOfService: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.extraDays === undefined ? null : { extraDays: v.extraDays }),
                ...(v.yearsOfService === undefined ? null : { yearsOfService: v.yearsOfService }),
            };
        });

    export type Outbound = {
        extraDays?: number | undefined;
        yearsOfService?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, YearsOfServiceIncrements> = z
        .object({
            extraDays: z.number().optional(),
            yearsOfService: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.extraDays === undefined ? null : { extraDays: v.extraDays }),
                ...(v.yearsOfService === undefined ? null : { yearsOfService: v.yearsOfService }),
            };
        });
}
