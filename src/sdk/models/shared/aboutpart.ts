/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type AboutPart = {
    /**
     * Image URL of the employee's avatar.
     */
    avatar?: string | undefined;
    /**
     * An array of the employee's hobbies.
     */
    hobbies?: Array<string> | undefined;
};

/** @internal */
export namespace AboutPart$ {
    export type Inbound = {
        avatar?: string | undefined;
        hobbies?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<AboutPart, z.ZodTypeDef, Inbound> = z
        .object({
            avatar: z.string().optional(),
            hobbies: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.avatar === undefined ? null : { avatar: v.avatar }),
                ...(v.hobbies === undefined ? null : { hobbies: v.hobbies }),
            };
        });

    export type Outbound = {
        avatar?: string | undefined;
        hobbies?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AboutPart> = z
        .object({
            avatar: z.string().optional(),
            hobbies: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.avatar === undefined ? null : { avatar: v.avatar }),
                ...(v.hobbies === undefined ? null : { hobbies: v.hobbies }),
            };
        });
}
