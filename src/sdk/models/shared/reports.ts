/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Report, Report$ } from "./report";
import * as z from "zod";

export type Reports = {
    views?: Array<Report> | undefined;
};

/** @internal */
export namespace Reports$ {
    export type Inbound = {
        views?: Array<Report$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<Reports, z.ZodTypeDef, Inbound> = z
        .object({
            views: z.array(Report$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.views === undefined ? null : { views: v.views }),
            };
        });

    export type Outbound = {
        views?: Array<Report$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Reports> = z
        .object({
            views: z.array(Report$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.views === undefined ? null : { views: v.views }),
            };
        });
}
