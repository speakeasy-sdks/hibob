/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { YearsOfServiceIncrements } from "./yearsofserviceincrements";
import { Expose, Type } from "class-transformer";

/**
 * The shortest amount of time employees can request.
 */
export enum PolicyMinTimeOffRequestDuration {
    FullDay = "fullDay",
    HalfDay = "halfDay",
    FullHour = "fullHour",
    HalfHour = "halfHour",
    QuarterHour = "quarterHour",
}

export enum PolicyUnit {
    Days = "days",
    Hours = "hours",
}

/**
 * Policy
 */
export class Policy extends SpeakeasyBase {
    /**
     * Base annual allowance.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "allowance" })
    allowance?: number;

    /**
     * Requests require approval.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "approvalRequired" })
    approvalRequired?: boolean;

    /**
     * Policy description.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * Maximum balance at the end of the cycle.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "maxBalance" })
    maxBalance?: number;

    /**
     * Minimum balance cap.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "minBalance" })
    minBalance?: number;

    /**
     * The shortest amount of time employees can request.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "minTimeOffRequestDuration" })
    minTimeOffRequestDuration?: PolicyMinTimeOffRequestDuration;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "unit" })
    unit?: PolicyUnit;

    @SpeakeasyMetadata({ elemType: YearsOfServiceIncrements })
    @Expose({ name: "yosIncrease" })
    @Type(() => YearsOfServiceIncrements)
    yosIncrease?: YearsOfServiceIncrements[];
}
