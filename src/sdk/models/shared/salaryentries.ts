/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SalaryEntry, SalaryEntry$ } from "./salaryentry";
import * as z from "zod";

export type SalaryEntries = {
    values?: Array<SalaryEntry> | undefined;
};

/** @internal */
export namespace SalaryEntries$ {
    export type Inbound = {
        values?: Array<SalaryEntry$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<SalaryEntries, z.ZodTypeDef, Inbound> = z
        .object({
            values: z.array(SalaryEntry$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.values === undefined ? null : { values: v.values }),
            };
        });

    export type Outbound = {
        values?: Array<SalaryEntry$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SalaryEntries> = z
        .object({
            values: z.array(SalaryEntry$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.values === undefined ? null : { values: v.values }),
            };
        });
}
