/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type Task = {
    description?: string | undefined;
    id?: number | undefined;
    set?: string | undefined;
    title?: string | undefined;
};

/** @internal */
export namespace Task$ {
    export type Inbound = {
        description?: string | undefined;
        id?: number | undefined;
        set?: string | undefined;
        title?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Task, z.ZodTypeDef, Inbound> = z
        .object({
            description: z.string().optional(),
            id: z.number().optional(),
            set: z.string().optional(),
            title: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.set === undefined ? null : { set: v.set }),
                ...(v.title === undefined ? null : { title: v.title }),
            };
        });

    export type Outbound = {
        description?: string | undefined;
        id?: number | undefined;
        set?: string | undefined;
        title?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Task> = z
        .object({
            description: z.string().optional(),
            id: z.number().optional(),
            set: z.string().optional(),
            title: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.set === undefined ? null : { set: v.set }),
                ...(v.title === undefined ? null : { title: v.title }),
            };
        });
}
