/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CustomTableColumn, CustomTableColumn$ } from "./customtablecolumn";
import * as z from "zod";

export type CustomTableMetadata = {
    /**
     * The ID of the category to which the custom table belongs
     */
    category?: string | undefined;
    columns?: Array<CustomTableColumn> | undefined;
    /**
     * The description of custom table
     */
    description?: string | undefined;
    /**
     * The identifier of custom table
     */
    id?: string | undefined;
    /**
     * The name of custom table
     */
    name?: string | undefined;
};

/** @internal */
export namespace CustomTableMetadata$ {
    export type Inbound = {
        category?: string | undefined;
        columns?: Array<CustomTableColumn$.Inbound> | undefined;
        description?: string | undefined;
        id?: string | undefined;
        name?: string | undefined;
    };

    export const inboundSchema: z.ZodType<CustomTableMetadata, z.ZodTypeDef, Inbound> = z
        .object({
            category: z.string().optional(),
            columns: z.array(CustomTableColumn$.inboundSchema).optional(),
            description: z.string().optional(),
            id: z.string().optional(),
            name: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.category === undefined ? null : { category: v.category }),
                ...(v.columns === undefined ? null : { columns: v.columns }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
            };
        });

    export type Outbound = {
        category?: string | undefined;
        columns?: Array<CustomTableColumn$.Outbound> | undefined;
        description?: string | undefined;
        id?: string | undefined;
        name?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CustomTableMetadata> = z
        .object({
            category: z.string().optional(),
            columns: z.array(CustomTableColumn$.outboundSchema).optional(),
            description: z.string().optional(),
            id: z.string().optional(),
            name: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.category === undefined ? null : { category: v.category }),
                ...(v.columns === undefined ? null : { columns: v.columns }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
            };
        });
}
