/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { OnboardingWizard, OnboardingWizard$ } from "./onboardingwizard";
import * as z from "zod";

export type OnboardingWizards = {
    wizards?: Array<OnboardingWizard> | undefined;
};

/** @internal */
export namespace OnboardingWizards$ {
    export type Inbound = {
        wizards?: Array<OnboardingWizard$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<OnboardingWizards, z.ZodTypeDef, Inbound> = z
        .object({
            wizards: z.array(OnboardingWizard$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.wizards === undefined ? null : { wizards: v.wizards }),
            };
        });

    export type Outbound = {
        wizards?: Array<OnboardingWizard$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OnboardingWizards> = z
        .object({
            wizards: z.array(OnboardingWizard$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.wizards === undefined ? null : { wizards: v.wizards }),
            };
        });
}
