/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class FieldTypeData extends SpeakeasyBase {
    /**
     * The ID of the list in the /v1/company/named-lists endpoint.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "listId" })
    listId?: string;
}

export class Field extends SpeakeasyBase {
    /**
     * Category of the field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "category" })
    category?: string;

    /**
     * Description of the field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * When true, this field keeps the history of its values, each being active starting from a certain date. The default value is false.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "historical" })
    historical?: boolean;

    /**
     * ID of the field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * A dot-separated path of this field value in the employee JSON returned by the /v1/profiles endpoint.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "jsonPath" })
    jsonPath?: string;

    /**
     * Name of the field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * The type of the field. Supported field types: text, text-area, number, date, list, multi-list, hierarchy-list, currency, employee-reference, document.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "typeData" })
    @Type(() => FieldTypeData)
    typeData?: FieldTypeData;
}
