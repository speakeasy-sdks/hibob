/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { OutToday, OutToday$ } from "./outtoday";
import { z } from "zod";

export type OutTodays = {
    outs?: Array<OutToday> | undefined;
};

/** @internal */
export namespace OutTodays$ {
    export type Inbound = {
        outs?: Array<OutToday$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<OutTodays, z.ZodTypeDef, Inbound> = z
        .object({
            outs: z.array(OutToday$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.outs === undefined ? null : { outs: v.outs }),
            };
        });

    export type Outbound = {
        outs?: Array<OutToday$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OutTodays> = z
        .object({
            outs: z.array(OutToday$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.outs === undefined ? null : { outs: v.outs }),
            };
        });
}
