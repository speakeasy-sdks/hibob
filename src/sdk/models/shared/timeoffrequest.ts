/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../types";
import { Expose, Transform, Type } from "class-transformer";

export class TimeoffRequestAttachmentLinks extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "filename" })
    filename?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "mimeType" })
    mimeType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url?: string;
}

/**
 * The unit used for the totalDuration and totalCost - either 'days' or 'hours'
 */
export enum TimeoffRequestDurationUnit {
    Days = "days",
    Hours = "hours",
}

/**
 * The type of request duration.<br> <b>portionOnRange</b> is when the request is for every morning or every afternoon during the days requested.<br> <b>hoursOnRange</b> is when the request is for X hours every day during the days requested.
 */
export enum TimeoffRequestType {
    Days = "days",
    Hours = "hours",
    PortionOnRange = "portionOnRange",
    HoursOnRange = "hoursOnRange",
}

export class TimeoffRequest extends SpeakeasyBase {
    /**
     * Whether the request is approved (and hence publicly visible).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "approved" })
    approved?: boolean;

    /**
     * Attachments with download links
     */
    @SpeakeasyMetadata({ elemType: TimeoffRequestAttachmentLinks })
    @Expose({ name: "attachmentLinks" })
    @Type(() => TimeoffRequestAttachmentLinks)
    attachmentLinks?: TimeoffRequestAttachmentLinks[];

    /**
     * The time off duration in hours for every day in the request (relevant for requests using the hoursOnRange type).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "dailyHours" })
    dailyHours?: number;

    /**
     * Date of the time off (relevant for requests using the Hours type).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "date" })
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    date?: RFCDate;

    /**
     * What portion of the request's days is included - morning or afternoon (relevant for requests using the portionOnRange type).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "dayPortion" })
    dayPortion?: string;

    /**
     * The request description.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * The unit used for the totalDuration and totalCost - either 'days' or 'hours'
     */
    @SpeakeasyMetadata()
    @Expose({ name: "durationUnit" })
    durationUnit?: TimeoffRequestDurationUnit;

    /**
     * Employee ID.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "employeeId" })
    employeeId?: string;

    /**
     * Date of the last day of the time off (not relevant for requests using
     *
     * @remarks
     *                                                the hours type).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "endDate" })
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    endDate?: RFCDate;

    /**
     * What portion of the last day is included - all_day, morning or afternoon (relevant for requests using the Days type).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "endDatePortion" })
    endDatePortion?: string;

    /**
     * Whether the request has attachments
     */
    @SpeakeasyMetadata()
    @Expose({ name: "hasAttachment" })
    hasAttachment?: boolean;

    /**
     * The time off duration in hours for the date (relevant for requests using the Hours type)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "hoursOnDate" })
    hoursOnDate?: number;

    /**
     * Display name of the policy type.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "policyTypeDisplayName" })
    policyTypeDisplayName?: string;

    /**
     * The reason code taken from the policy type's reason codes list. The list is available in GET /timeoff/policy-types/{policyType}/reason-codes
     */
    @SpeakeasyMetadata()
    @Expose({ name: "reasonCode" })
    reasonCode?: string;

    /**
     * Time Off Request ID.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "requestId" })
    requestId?: number;

    /**
     * Date of the first day of the time off  (not relevant for requests using the hours type).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "startDate" })
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    startDate?: RFCDate;

    /**
     * What portion of the first day is included - all_day, morning or afternoon (relevant for requests using the Days type).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "startDatePortion" })
    startDatePortion?: string;

    /**
     * Request status. This can be approved, pending, canceled, etc.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: string;

    /**
     * The amount that will be deducted from the balance
     */
    @SpeakeasyMetadata()
    @Expose({ name: "totalCost" })
    totalCost?: number;

    /**
     * The total amount of time the request covers, including regular days off such as weekends
     */
    @SpeakeasyMetadata()
    @Expose({ name: "totalDuration" })
    totalDuration?: number;

    /**
     * The type of request duration.<br> <b>portionOnRange</b> is when the request is for every morning or every afternoon during the days requested.<br> <b>hoursOnRange</b> is when the request is for X hours every day during the days requested.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: TimeoffRequestType;
}
