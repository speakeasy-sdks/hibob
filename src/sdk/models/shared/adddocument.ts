/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type AddDocument = {
    /**
     * Document name.
     */
    documentName?: string | undefined;
    /**
     * URL of the document to upload.
     */
    documentUrl?: string | undefined;
    /**
     * Tags to.
     */
    tags?: Array<string> | undefined;
};

/** @internal */
export namespace AddDocument$ {
    export type Inbound = {
        documentName?: string | undefined;
        documentUrl?: string | undefined;
        tags?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<AddDocument, z.ZodTypeDef, Inbound> = z
        .object({
            documentName: z.string().optional(),
            documentUrl: z.string().optional(),
            tags: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.documentName === undefined ? null : { documentName: v.documentName }),
                ...(v.documentUrl === undefined ? null : { documentUrl: v.documentUrl }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
            };
        });

    export type Outbound = {
        documentName?: string | undefined;
        documentUrl?: string | undefined;
        tags?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddDocument> = z
        .object({
            documentName: z.string().optional(),
            documentUrl: z.string().optional(),
            tags: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.documentName === undefined ? null : { documentName: v.documentName }),
                ...(v.documentUrl === undefined ? null : { documentUrl: v.documentUrl }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
            };
        });
}
