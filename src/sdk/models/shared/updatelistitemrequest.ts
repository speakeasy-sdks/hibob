/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type UpdateListItemRequest = {
    /**
     * Name of the item.
     */
    name?: string | undefined;
    /**
     * ID of the new hierarchy parent node.
     */
    parentId?: number | undefined;
};

/** @internal */
export namespace UpdateListItemRequest$ {
    export type Inbound = {
        name?: string | undefined;
        parentId?: number | undefined;
    };

    export const inboundSchema: z.ZodType<UpdateListItemRequest, z.ZodTypeDef, Inbound> = z
        .object({
            name: z.string().optional(),
            parentId: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.parentId === undefined ? null : { parentId: v.parentId }),
            };
        });

    export type Outbound = {
        name?: string | undefined;
        parentId?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateListItemRequest> = z
        .object({
            name: z.string().optional(),
            parentId: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.parentId === undefined ? null : { parentId: v.parentId }),
            };
        });
}
