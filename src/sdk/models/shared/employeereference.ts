/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type EmployeeReference = {
    email?: string | undefined;
    firstName?: string | undefined;
    id?: string | undefined;
    surname?: string | undefined;
};

/** @internal */
export namespace EmployeeReference$ {
    export type Inbound = {
        email?: string | undefined;
        firstName?: string | undefined;
        id?: string | undefined;
        surname?: string | undefined;
    };

    export const inboundSchema: z.ZodType<EmployeeReference, z.ZodTypeDef, Inbound> = z
        .object({
            email: z.string().optional(),
            firstName: z.string().optional(),
            id: z.string().optional(),
            surname: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.surname === undefined ? null : { surname: v.surname }),
            };
        });

    export type Outbound = {
        email?: string | undefined;
        firstName?: string | undefined;
        id?: string | undefined;
        surname?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EmployeeReference> = z
        .object({
            email: z.string().optional(),
            firstName: z.string().optional(),
            id: z.string().optional(),
            surname: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.surname === undefined ? null : { surname: v.surname }),
            };
        });
}
