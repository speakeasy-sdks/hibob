/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

/**
 * The row data depends on what is defined in the table's schema, use HiBob Custom Table Metadata API to get list of defined columns. The only property that's always present is ID.
 */
export type CustomTableEntry = {
    /**
     * The ID of the row
     */
    id?: number | undefined;
};

/** @internal */
export namespace CustomTableEntry$ {
    export type Inbound = {
        id?: number | undefined;
    };

    export const inboundSchema: z.ZodType<CustomTableEntry, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
            };
        });

    export type Outbound = {
        id?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CustomTableEntry> = z
        .object({
            id: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
            };
        });
}
