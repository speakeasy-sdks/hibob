/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CustomTableEntry, CustomTableEntry$ } from "./customtableentry";
import { z } from "zod";

export type CustomTableEntriesList = {
    values?: Array<CustomTableEntry> | undefined;
};

/** @internal */
export namespace CustomTableEntriesList$ {
    export type Inbound = {
        values?: Array<CustomTableEntry$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<CustomTableEntriesList, z.ZodTypeDef, Inbound> = z
        .object({
            values: z.array(CustomTableEntry$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.values === undefined ? null : { values: v.values }),
            };
        });

    export type Outbound = {
        values?: Array<CustomTableEntry$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CustomTableEntriesList> = z
        .object({
            values: z.array(CustomTableEntry$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.values === undefined ? null : { values: v.values }),
            };
        });
}
