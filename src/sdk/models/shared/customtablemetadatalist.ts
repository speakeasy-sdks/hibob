/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CustomTableMetadata, CustomTableMetadata$ } from "./customtablemetadata";
import { z } from "zod";

export type CustomTableMetadataList = {
    tables?: Array<CustomTableMetadata> | undefined;
};

/** @internal */
export namespace CustomTableMetadataList$ {
    export type Inbound = {
        tables?: Array<CustomTableMetadata$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<CustomTableMetadataList, z.ZodTypeDef, Inbound> = z
        .object({
            tables: z.array(CustomTableMetadata$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.tables === undefined ? null : { tables: v.tables }),
            };
        });

    export type Outbound = {
        tables?: Array<CustomTableMetadata$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CustomTableMetadataList> = z
        .object({
            tables: z.array(CustomTableMetadata$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.tables === undefined ? null : { tables: v.tables }),
            };
        });
}
