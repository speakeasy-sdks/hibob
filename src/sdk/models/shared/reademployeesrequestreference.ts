/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EmployeeFilter } from "./employeefilter";
import { Expose, Type } from "class-transformer";

export class ReadEmployeesRequestReference extends SpeakeasyBase {
    /**
     * Optional array of employee field paths that's are required in response. If you don't specify fields - only basic fields and categories are returned: <br/><b>Basic fields:</b>  <ul>
     *
     * @remarks
     *                       <li>ID</li>
     *                       <li>Company ID</li>
     *                       <li>Email</li>
     *                       <li>First name</li>
     *                       <li>Last name</li>
     *                       <li>Display name</li>
     *                       <li>Middle name</li>
     *                       <li>Creation timestamp</li>
     *                       <li>Avatar URL</li>
     * </ul> <br/><b>Basic Categories:</b> <ul>
     *                       <li>About</li>
     *                       <li>Employment</li>
     *                       <li>Work</li>
     * </ul>
     */
    @SpeakeasyMetadata()
    @Expose({ name: "fields" })
    fields?: string[];

    /**
     * Optional list of filters for filtering employees. We currently support up to one filter.
     */
    @SpeakeasyMetadata({ elemType: EmployeeFilter })
    @Expose({ name: "filters" })
    @Type(() => EmployeeFilter)
    filters?: EmployeeFilter[];

    /**
     * Optional field.  <br> <b>If not sent:</b> supply machine-readable values only. <br> <br> Possible values: <br>  <br> <b>APPEND</b> - include the additional "humanReadable" JSON node in the response. <br>  <br> <b>REPLACE</b> - supply humanReadable values in JSON instead of machine-readable format. <br>
     */
    @SpeakeasyMetadata()
    @Expose({ name: "humanReadable" })
    humanReadable?: string;

    /**
     * <br>Optional field. <br>Default value = false. <br>Defines whether response should include inactive employees.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "showInactive" })
    showInactive?: boolean;
}
