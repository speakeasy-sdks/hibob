/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type CurrencyValue = {
    /**
     * Three-letter currency code.
     */
    currency: string;
    value: number;
};

/** @internal */
export namespace CurrencyValue$ {
    export type Inbound = {
        currency: string;
        value: number;
    };

    export const inboundSchema: z.ZodType<CurrencyValue, z.ZodTypeDef, Inbound> = z
        .object({
            currency: z.string(),
            value: z.number(),
        })
        .transform((v) => {
            return {
                currency: v.currency,
                value: v.value,
            };
        });

    export type Outbound = {
        currency: string;
        value: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CurrencyValue> = z
        .object({
            currency: z.string(),
            value: z.number(),
        })
        .transform((v) => {
            return {
                currency: v.currency,
                value: v.value,
            };
        });
}
