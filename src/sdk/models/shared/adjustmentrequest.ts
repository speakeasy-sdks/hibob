/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../types";
import { Expose, Transform } from "class-transformer";

/**
 * Adjustment type - balance or time used.
 */
export enum AdjustmentRequestAdjustmentType {
    Balance = "balance",
    DaysUsed = "daysUsed",
}

export class AdjustmentRequest extends SpeakeasyBase {
    /**
     * Adjustment type - balance or time used.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "adjustmentType" })
    adjustmentType?: AdjustmentRequestAdjustmentType;

    /**
     * The amount of days/hours to add/subtract.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount?: number;

    /**
     * The date this adjustment becomes effective.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "effectiveDate" })
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    effectiveDate?: RFCDate;

    /**
     * Policy type name.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "policyType" })
    policyType?: string;

    /**
     * A reason for this adjustment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "reason" })
    reason?: string;
}
