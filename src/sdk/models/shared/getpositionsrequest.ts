/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FilterInstruction } from "./filterinstruction";
import { Expose, Type } from "class-transformer";

export class GetPositionsRequest extends SpeakeasyBase {
    /**
     * Array of field ids (paths) to fetch for the positions.<br /> Minimum 1 up to 50 fields. Any invalid number of fields will get a response of 400 HTTP error.<br /> You can include only the field ids listed in the [Positions Fields Metadata API](https://apidocs.hibob.com/reference/get_metadata-objects-position).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "fields" })
    fields: string[];

    @SpeakeasyMetadata({ elemType: FilterInstruction })
    @Expose({ name: "filters" })
    @Type(() => FilterInstruction)
    filters: FilterInstruction[];

    /**
     * Whether to include the additional "humanReadable" entry in the response.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "includeHumanReadable" })
    includeHumanReadable?: boolean;
}
