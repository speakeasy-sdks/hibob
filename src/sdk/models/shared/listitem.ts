/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ListItem extends SpeakeasyBase {
    /**
     * Whether the item is archived (not available for selection).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "archived" })
    archived?: boolean;

    /**
     * Nested items - if the list is nested.
     */
    @SpeakeasyMetadata({ elemType: ListItem })
    @Expose({ name: "children" })
    @Type(() => ListItem)
    children?: ListItem[];

    /**
     * Internal ID of the item.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the item.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}
