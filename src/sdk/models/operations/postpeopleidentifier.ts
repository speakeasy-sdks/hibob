/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";

export class PostPeopleIdentifierSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
    basic?: shared.SchemeBasic;

    @SpeakeasyMetadata({
        data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
    })
    bearer?: string;
}

export class PostPeopleIdentifierRequest extends SpeakeasyBase {
    /**
     * Read request content that allows you to select fields and other options
     */
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    readSingleEmployeeRequestReference?: shared.ReadSingleEmployeeRequestReference;

    /**
     * employee ID or email
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=identifier" })
    identifier: string;
}

export class PostPeopleIdentifierResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Employee
     */
    @SpeakeasyMetadata()
    employees?: shared.Employees;

    /**
     * Unexpected error.
     */
    @SpeakeasyMetadata()
    error?: shared.ErrorT;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;
}
