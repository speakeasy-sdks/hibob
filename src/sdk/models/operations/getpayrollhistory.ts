/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetPayrollHistorySecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({
        data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
    })
    bearer: string;
}

export class GetPayrollHistoryRequest extends SpeakeasyBase {
    /**
     * filter payroll for specific department.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=department" })
    department?: string;

    /**
     * Whether to include inactive employees in the response.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=showInactive" })
    showInactive?: boolean;
}

export class GetPayrollHistoryResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Payroll data.
     */
    @SpeakeasyMetadata()
    employees?: shared.Employees;

    /**
     * Unexpected error
     */
    @SpeakeasyMetadata()
    error?: shared.ErrorT;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
