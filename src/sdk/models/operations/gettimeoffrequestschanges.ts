/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../types";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetTimeoffRequestsChangesSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({
        data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
    })
    bearer: string;
}

export class GetTimeoffRequestsChangesRequest extends SpeakeasyBase {
    /**
     * Timestamp starting from which to return the changes. Should be in ISO-8601 format, e.g. 2050-04-05T14:30:24.345Z or 2050-04-05T12:30-02:00.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=since" })
    since: RFCDate;
}

export class GetTimeoffRequestsChangesResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * List of changes
     */
    @SpeakeasyMetadata()
    timeoffChanges?: shared.TimeoffChanges;
}
